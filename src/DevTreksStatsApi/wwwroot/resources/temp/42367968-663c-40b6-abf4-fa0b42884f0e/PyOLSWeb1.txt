import sys
import statsmodels.formula.api as smf
import statsmodels.api as sm
import pandas as pd
from statsmodels.sandbox.regression.predstd import wls_prediction_std

#make a panda dataframe from input dataset csv file
dataset1 = pd.read_csv(sys.argv[1])
#dataset2 leaves out the last 3 lines of data used for ci
dataset2 = dataset1.head(-3)
#dataset3 is the last 3 lines of data used for ci
dataset3 = dataset1.tail(3)
#run statistical model with dataset2
mod = smf.ols('energyuse ~ housesize1 + housesize2', data=dataset2)
results = mod.fit()
#print a summary of model results
print(results.summary());

#get predicted values for dataset3
ci = results.predict(dataset3)
#make an exog parameter from a nobs X k array
colindex = len(dataset3.columns)
X = dataset3.iloc[:,1:colindex]
#add the intercept
X = sm.add_constant(X)
#get confidence intervals for predicted value of dataset3
prstd, iv_l, iv_u = wls_prediction_std(results, exog=X, alpha=.05)
indexcount = len(dataset3.index) - 1
print(round(ci[0], 4), round(iv_l[indexcount - 2], 4), round(iv_u[indexcount - 2], 4))
print(round(ci[1], 4), round(iv_l[indexcount - 1], 4), round(iv_u[indexcount - 1], 4))
print(round(ci[2], 4), round(iv_l[indexcount], 4), round(iv_u[indexcount], 4))
